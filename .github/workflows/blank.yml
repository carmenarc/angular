name: CI/CD Pipeline
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Actualizamos a la versión más reciente
      - name: Set up Node.js
        uses: actions/setup-node@v3  # Actualizamos a la versión más reciente
        with:
          node-version: '14'  # Puedes ajustar la versión de Node.js según tus necesidades
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Build Docker image
        run: docker build -t mi-app .
      - name: Deploy to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag mi-app $DOCKER_USERNAME/mi-app:latest
          docker push $DOCKER_USERNAME/mi-app:latest
      - name: Deploy to Production
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no user@your-production-server "docker pull $DOCKER_USERNAME/mi-app:latest && docker run -d -p 80:80 $DOCKER_USERNAME/mi-app:latest"
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/autobuild@v2
        with:
          build-commands: npm install && npm test
      - name: Upload CodeQL Results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ github.workspace }}/codeql/codeql-analysis-results.sarif
      - name: Notify Deployment Success
        uses: slackapi/slack-github-action@v1
        with:
          text: 'The deployment to production was successful!'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}



