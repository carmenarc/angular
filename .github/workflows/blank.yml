name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Create Angular Project
        run: ng new nombre_de_tu_proyecto --no-standalone
        working-directory: .

      - name: Navigate to project directory
        run: cd nombre_de_tu_proyecto

      - name: Generate Components
        run: |
          ng generate component add-task
          ng generate component local-storage-data
          ng generate component delete-item

      - name: Install Dependencies
        run: npm install

      - name: Serve Application
        run: ng serve --host 0.0.0.0 --port 8080 &
        continue-on-error: true
        # Wait for the server to start
      - name: Run Tests
        run: ng test --watch=false --browsers=ChromeHeadless

      - name: Build Docker Image
        run: docker build -t nombre_de_tu_proyecto .

      - name: Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag nombre_de_tu_proyecto $DOCKER_USERNAME/nombre_de_tu_proyecto:latest
          docker push $DOCKER_USERNAME/nombre_de_tu_proyecto:latest

      - name: Deploy to Production Server
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no user@your-production-server "docker pull $DOCKER_USERNAME/nombre_de_tu_proyecto:latest && docker run -d -p 80:80 $DOCKER_USERNAME/nombre_de_tu_proyecto:latest"






